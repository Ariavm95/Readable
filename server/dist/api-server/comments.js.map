{"version":3,"sources":["../../api-server/comments.js"],"names":["clone","require","posts","db","defaultData","id","parentId","timestamp","body","author","voteScore","deleted","parentDeleted","getData","token","data","getByParent","Promise","res","comments","keys","Object","filtered_keys","filter","key","map","get","add","comment","incrementCommentCounter","vote","option","console","log","disableByParent","post","forEach","disable","edit","prop","module","exports"],"mappings":"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","file":"comments.js","sourcesContent":["const clone = require('clone')\nconst posts = require('./posts')\n\nlet db = {}\n\nconst defaultData = {\n  \"894tuq4ut84ut8v4t8wun89g\": {\n    id: '894tuq4ut84ut8v4t8wun89g',\n    parentId: \"8xf0y6ziyjabvozdd253nd\",\n    timestamp: 1468166872634,\n    body: 'Hi there! I am a COMMENT.',\n    author: 'thingtwo',\n    voteScore: 6,\n    deleted: false,\n    parentDeleted: false\n  },\n  \"8tu4bsun805n8un48ve89\": {\n    id: '8tu4bsun805n8un48ve89',\n    parentId: \"8xf0y6ziyjabvozdd253nd\",\n    timestamp: 1469479767190,\n    body: 'Comments. Are. Cool.',\n    author: 'thingone',\n    voteScore: -5,\n    deleted: false,\n    parentDeleted: false\n  }\n}\n\nfunction getData (token) {\n  let data = db[token]\n  if (data == null) {\n    data = db[token] = clone(defaultData)\n  }\n  return data\n}\n\nfunction getByParent (token, parentId) {\n  return new Promise((res) => {\n    let comments = getData(token)\n    let keys = Object.keys(comments)\n    filtered_keys = keys.filter(key => comments[key].parentId === parentId && !comments[key].deleted)\n    res(filtered_keys.map(key => comments[key]))\n  })\n}\n\nfunction get (token, id) {\n  return new Promise((res) => {\n    const comments = getData(token)\n    res(\n      comments[id].deleted || comments[id].parentDeleted\n        ? {}\n        : comments[id]\n      )\n  })\n}\n\nfunction add (token, comment) {\n  return new Promise((res) => {\n    let comments = getData(token)\n\n    comments[comment.id] = {\n      id: comment.id,\n      timestamp: comment.timestamp,\n      body: comment.body,\n      author: comment.author,\n      parentId: comment.parentId,\n      voteScore: 1,\n      deleted: false,\n      parentDeleted: false\n    }\n\n    posts.incrementCommentCounter(token, comment.parentId, 1)\n    res(comments[comment.id])\n  })\n}\n\nfunction vote (token, id, option) {\n  return new Promise((res) => {\n    let comments = getData(token)\n    comment = comments[id]\n    switch(option) {\n        case \"upVote\":\n            comment.voteScore = comment.voteScore + 1\n            break\n        case \"downVote\":\n            comment.voteScore = comment.voteScore - 1\n            break \n        default:\n            console.log(`comments.vote received incorrect parameter: ${option}`)\n    }\n    res(comment)\n  })\n}\n\nfunction disableByParent (token, post) {\n    return new Promise((res) => {\n        let comments = getData(token)\n        keys = Object.keys(comments)\n        filtered_keys = keys.filter(key => comments[key].parentId === post.id)\n        filtered_keys.forEach(key => comments[key].parentDeleted = true)\n        res(post)\n    })\n}\n\nfunction disable (token, id) {\n    return new Promise((res) => {\n      let comments = getData(token)\n      comments[id].deleted = true\n      posts.incrementCommentCounter(token, comments[id].parentId, -1)\n      res(comments[id])\n    })\n}\n\nfunction edit (token, id, comment) {\n    return new Promise((res) => {\n        let comments = getData(token)\n        for (prop in comment) {\n            comments[id][prop] = comment[prop]\n        }\n        res(comments[id])\n    })\n}\n\nmodule.exports = {\n  get,\n  getByParent,\n  add,\n  vote,\n  disableByParent,\n  disable,\n  edit\n}\n"]}